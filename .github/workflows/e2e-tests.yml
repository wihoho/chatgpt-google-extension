name: E2E Tests - Chrome Extension

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build extension
      run: npm run build
      
    - name: Verify build output
      run: |
        ls -la build/
        ls -la build/chromium/
        echo "Manifest content:"
        cat build/chromium/manifest.json
        
    - name: Install Chrome dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          ca-certificates \
          fonts-liberation \
          libappindicator3-1 \
          libasound2 \
          libatk-bridge2.0-0 \
          libatk1.0-0 \
          libc6 \
          libcairo2 \
          libcups2 \
          libdbus-1-3 \
          libexpat1 \
          libfontconfig1 \
          libgbm1 \
          libgcc1 \
          libglib2.0-0 \
          libgtk-3-0 \
          libnspr4 \
          libnss3 \
          libpango-1.0-0 \
          libpangocairo-1.0-0 \
          libstdc++6 \
          libx11-6 \
          libx11-xcb1 \
          libxcb1 \
          libxcomposite1 \
          libxcursor1 \
          libxdamage1 \
          libxext6 \
          libxfixes3 \
          libxi6 \
          libxrandr2 \
          libxrender1 \
          libxss1 \
          libxtst6 \
          lsb-release \
          wget \
          xdg-utils
          
    - name: Run CI tests
      run: npm run test:ci
      env:
        CI: true
        
    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ci-test-results-node-${{ matrix.node-version }}
        path: |
          tests/e2e/simple-ci-test-report.json
          tests/e2e/simple-ci-test-report.html
        retention-days: 30
        
    - name: Upload failure screenshots
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: failure-logs-node-${{ matrix.node-version }}
        path: tests/e2e/simple-ci-test-report.html
        retention-days: 30
        
    - name: Comment PR with test results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          try {
            const reportPath = path.join(process.cwd(), 'tests/e2e/simple-ci-test-report.json');
            if (fs.existsSync(reportPath)) {
              const results = JSON.parse(fs.readFileSync(reportPath, 'utf8'));

              const comment = `## 🧪 CI Test Results (Node ${{ matrix.node-version }})

              **Summary:**
              - ✅ Passed: ${results.summary.passed}
              - ❌ Failed: ${results.summary.failed}
              - ⏱️ Duration: ${(results.summary.duration / 1000).toFixed(2)}s
              - 🖥️ Platform: ${results.environment.platform}

              **Test Results:**
              ${results.tests.map(test =>
                `- ${test.success ? '✅' : '❌'} ${test.name}: ${test.success ? 'PASS' : test.details}`
              ).join('\n')}

              ${results.summary.failed === 0 ?
                '🎉 **All tests passed! Build is valid and ready for release.**' :
                '⚠️ **Some tests failed. Please review before merging.**'
              }`;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
          } catch (error) {
            console.log('Failed to post test results comment:', error.message);
          }

  release-gate:
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: github.event_name == 'release'
    
    steps:
    - name: Check E2E test results
      run: |
        echo "🎯 E2E tests completed successfully"
        echo "✅ Extension is verified and ready for release"
        
    - name: Post release comment
      uses: actions/github-script@v7
      with:
        script: |
          const comment = `## 🚀 Release Verification Complete
          
          ✅ **E2E Tests Passed**: All integration tests completed successfully
          ✅ **Extension Verified**: Real browser testing confirms functionality
          ✅ **Ready for Distribution**: Extension is safe to publish to Chrome Web Store
          
          **Tested Features:**
          - Event extraction from various text formats
          - Error handling for failed extractions
          - Review prompt functionality
          - Timeout handling (5-second limit)
          - Modal replacement logic
          
          🎉 **Release approved by automated testing!**`;
          
          github.rest.repos.createCommitComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.sha,
            body: comment
          });
